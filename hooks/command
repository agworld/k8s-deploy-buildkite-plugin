#!/bin/bash

set -euo pipefail

function updateImage () {
    local i=0
    local imagevarname="BUILDKITE_PLUGIN_K8S_DEPLOY_CONTAINERS_${i}_IMAGE"
    local containervarname="BUILDKITE_PLUGIN_K8S_DEPLOY_CONTAINERS_${i}_CONTAINERNAME"
    local containerstring=""

    # Extract each container to be updated
    while [[ -n "${!imagevarname:-}" ]] ; do
        containerstring=("${containerstring} ${!containervarname}=${!imagevarname}")
        i=$((i+1))
        imagevarname="BUILDKITE_PLUGIN_K8S_DEPLOY_CONTAINERS_${i}_IMAGE"
        containervarname="BUILDKITE_PLUGIN_K8S_DEPLOY_CONTAINERS_${i}_CONTAINERNAME"
    done

    local namespace="$BUILDKITE_PLUGIN_K8S_DEPLOY_NAMESPACE"
    local deploymentName="$BUILDKITE_PLUGIN_K8S_DEPLOY_DEPLOYMENTNAME"

    echo "--- :kubernetes: Deploying new image to ${deploymentName}"

    kubectl set image deployment/$deploymentName $containerstring --record -n $namespace
    kubectl annotate deployment/$deploymentName kubernetes.io/change-cause=\"Buildkite deploy. Unblocked by $${BUILDKITE_UNBLOCKER}, $(git log --oneline -n 1)\" -n default
    kubectl rollout status deployment/staticmaps-deployment -n default
}

if [[ "$BUILDKITE_PLUGIN_K8S_DEPLOY_ACTION" == "updateImage" ]] ; then
    updateImage    
fi